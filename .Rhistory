teste[is.na(teste$`1`),]
teste[is.na(teste$vale_transporte),]
sum(is.na(teste$vale_transporte))
sum(teste$vale_transporte == "")
length(teste)
dim(teste)
(231*100)/887
4%1
4 mod 1
(a%b/a)*a+(b%a/b)*b
teste = (a%b/a)*a+(b%a/b)*b
teste =function(a,b){ (a%b/a)*a+(b%a/b)*b }
teste(5, 2)
teste =function(a,b){ (mod(a,b)/a)*a+(mod(b,a)/b)*b }
teste(5,2)
library(numbers)
teste = read.csv("peticoes_movimentacoes_merge_brf.csv", sep = ",", check.names = FALSE)
View(teste)
View(teste[which(teste$data_distribuicao_y != "Not found"), ])
sum(teste$vale_transporte == "")
dim(teste)
(33*100)/33
(33*100)/887
rm(list=ls())
library("googledrive")
library(data.table)
relatorio_deposito = fread(input = "~/Relatorio de Deposito.csv")
View(relatorio_deposito)
table(relatorio_deposito$Empresa)
colnames(relatorio_deposito)
relatorio_participantes = fread("Relatorio de Participantes.csv")
colnames(relatorio_participantes)
relatorio_pastas = fread("Relatorio de Pastas.csv")
colnames(relatorio_pastas)
relatorio_pedidos = fread("Relatorio de Pedidos.csv")
colnames(relatorio_pedidos)
relatorio_processos = fread("Relatorio de Processos.csv")
colnames(relatorio_processos)
table(relatorio_deposito)
ncol(relatorio_deposito)
ncol(relatorio_participantes)
ncol(relatorio_pastas)
ncol(relatorio_pedidos)
ncol(relatorio_processos)
table(relatorio_processos)
colnames(relatorio_processos)
rm(list=ls())
library(data.table)
fread("Relatorio de Processos.csv")
ncol(relatorio_processos)
relatorio_processos = fread("Relatorio de Processos.csv")
ncol(relatorio_processos)
colnames(relatorio_processos)
relatorio_pedidos = fread("Relatorio de Pedidos.csv")
ncol(relatorio_pedidos)
relatorio_pastas = fread("Relatorio de Pastas.csv")
ncol(relatorio_pedidos)
ncol(relatorio_pastas)
colnamees(relatorio_pastas)
colnames(relatorio_pastas)
relatorio_participantes = fread("Relatorio de Participantes.csv")
ncol(relatorio_participantes)
colnames(relatorio_participantes)
relatorio_depositos = fread("Relatorio de Depositos.csv")
relatorio_depositos = fread("Relatorio de Deposito.csv")
ncol(relatorio_depositos)
colnames(relatorio_depositos)
colnames(relatorio_pedidos)
View(relatorio_processos)
relatorio_deposito = fread("Relatorio de Deposito.csv")
library(data.table)
relatorio_deposito = fread("Relatorio de Deposito.csv")
relatorio_pasta = fread("Relatorio de Pasta.csv")
relatorio_pasta = fread("Relatorio de Pastas.csv")
colnames(relatorio_pasta)
teste = fread("relatorio_teste.csv", sep='\t')
View(teste)
teste = fread("relatorio_teste.csv", sep=';')
teste = fread("relatorio_teste.csv", sep=',')
teste = fread("relatorio_teste.csv")
library(e1071)
library(data.table)
getwd()
setwd('/home/semantix/Documentos/mestrado/mestrado/')
tav <- fread(file = "reuters_pos_tag_final.csv", header = TRUE, check.names = FALSE)
ggetwd()
getwd()
rm(list=ls())
library(e1071)
library(data.table)
tav <- fread(file = "reuters_pos_tag_final.csv", header = TRUE, check.names = FALSE)
start.time <- Sys.time()
for( index in 1:5  )
{
d = NULL
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
best_start <- .Machine$integer.max
for( index_best_start in 1:50 )
{
fuzzyFeature <- cmeans(t(tav), i)
if( best_start > fuzzyFeature$withinerror )
{
best_start <- fuzzyFeature$withinerror
fuzzyFeatureBest <- fuzzyFeature
}
}
result_index <- fclustIndex(fuzzyFeatureBest, t(tav), index = "fukuyama.sugeno")
d = rbind(d, data.frame(i, result_index))
}
write.csv(d, file = paste(paste('/home/semantix/Documentos/mestrado/mestrado/fukuyama/fukuyama_sugeno_teste', index, sep ="_" ), 'csv',sep="."), row.names = FALSE)
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/fukuyama/fukuyama_sugeno_teste", index, sep = "_"), 'png', sep = "." ) )
plot(d$i, d$result_index, type = "o")
dev.off()
}
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
for( index in 1:5  )
{
d = NULL
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
best_start <- .Machine$integer.max
for( index_best_start in 1:100 )
{
fuzzyFeature <- cmeans(t(tav), i)
if( best_start > fuzzyFeature$withinerror )
{
best_start <- fuzzyFeature$withinerror
fuzzyFeatureBest <- fuzzyFeature
}
}
result_index <- fclustIndex(fuzzyFeatureBest, t(tav), index = "fukuyama.sugeno")
d = rbind(d, data.frame(i, result_index))
}
write.csv(d, file = paste(paste('/home/semantix/Documentos/mestrado/mestrado/fukuyama/fukuyama_sugeno_teste', index, sep ="_" ), 'csv',sep="."), row.names = FALSE)
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/fukuyama/fukuyama_sugeno_teste", index, sep = "_"), 'png', sep = "." ) )
plot(d$i, d$result_index, type = "o")
dev.off()
}
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
for( index in 1:5  )
{
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
best_start <- .Machine$integer.max
for( index_best_start in 1:100 )
{
fuzzyFeature <- cmeans(t(tav), i)
if( best_start > fuzzyFeature$withinerror )
{
best_start <- fuzzyFeature$withinerror
fuzzyFeatureBest <- fuzzyFeature
}
knee <- c(knee, best_start)
}
}
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="erro",ylab="cluster")
dev.off()
}
for( index in 1:10  )
{
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="erro",ylab="cluster")
dev.off()
}
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="erro",ylab="cluster")
dev.off()
}
library(data.table)
tav <- fread(file = "reuters_pos_tag_final.csv", header = TRUE, check.names = FALSE)
fuzzyFeature <- cmeans(t(tav), 3)
library(e1071)
fuzzyFeature <- cmeans(t(tav), i)
fuzzyFeature <- cmeans(t(tav), 3)
knee = fuzzy$withinerror
knee = fuzzyFeature$withinerror
knee
knee
knee = c(knee, 10)
knee
diff(knee)
knee = c(knee, 10, 9)
diff(knee)
knee
knee[-1] - knee[-length(knee)]
knee[-2] - knee[-length(knee)]
knee[-1] - knee[-length(knee)]
knee[-1] - knee[-length(knee) - 1]
delta_one_element = diff(knee)
delta_one_element
outer(delta_one_element, delta_one_element, "+")
soma_deltas = outer(delta_one_element)
soma_deltas = outer(delta_one_element, delta_one_element, "+")
which(soma_deltas == max(soma_deltas), arr.ind = TRUE)
diag(soma_deltas)=NA
soma_deltas
which(soma_deltas == max(soma_deltas), arr.ind = TRUE)
which(soma_deltas == max(soma_deltas), arr.ind = TRUE)
soma_deltas = outer(delta_one_element, delta_one_element, "+")
diag(soma_deltas) = .Machine$double.xmin
soma_deltas
which(soma_deltas == max(soma_deltas), arr.ind = TRUE)
delta_one_element
which(soma_deltas == max(soma_deltas), arr.ind = FALSE)
which(soma_deltas == max(soma_deltas), arr.ind = TRUE)
library(zoo)
knee
rollapply(knee, by = 3, difference)
rollapply(knee, by = 3, minux)
rollapply(knee, by = 3, minus)
?rollapply
rollapply(knee, by = 3, diff)
rollapply(knee, len(knee), by = 3, diff)
rollapply(knee, length(knee), by = 3, diff)
knee
rollapply(soma_deltas, length(soma_deltas), by = 1, sum)
soma_deltas
rollapply(delta_one_element, length(soma_deltas), by = 1, sum)
delta_one_element
rollapply(delta_one_element, by = 1, sum)
rollapply(delta_one_element, 1, sum)
rollapply(delta_one_element, 2, sum)
soma_deltas = rollapply(delta_one_element, 2, sum)
which.max(soma_deltas)
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.max(soma_deltas) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.min(soma_deltas) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.max(soma_deltas) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(soma_deltas)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.max(abs(soma_deltas)) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(abs(delta_one_element), 2, sum)
cluster_utilizado = which.max(soma_deltas) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.max(soma_deltas) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(soma_deltas)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.max(soma_deltas) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(delta_one_element)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.max(delta_one_element) + 1
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.min(delta_one_element) + 1
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
for(index in 1:10){
knee = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- cmeans(t(tav), i)
knee <- c(knee, fuzzyFeature$withinerror)
}
delta_one_element = diff(knee)
soma_deltas = rollapply(delta_one_element, 2, sum)
cluster_utilizado = which.min(delta_one_element) + 2
cluster_knee = c(2:floor( sqrt( nrow( t(tav) ) ) ))
png(filename = paste(paste("/home/semantix/Documentos/mestrado/mestrado/joelho/joelho_teste", index, sep = "_"), 'png', sep = "." ) )
plot(cluster_knee, knee, type = "o", xlab="cluster",ylab="erro")
dev.off()
print(cluster_utilizado)
}
getwd()
library(e1071)
library(data.table)
tav <- fread(file = "reuters_pos_tag_final.csv", header = TRUE, check.names = FALSE)
d = NULL
fuzzyFeature = list()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyFeature <- c(fuzzyFeature, cmeans(t(tav), i))
}
fuzzyFeature[0]
fuzzyFeature[1]
fuzzyFeature[2]
fuzzyFeature[3]
fuzzyFeature[4]
dim(fuzzyFeature)
len(fuzzyFeature)
length(fuzzyFeature)
d = NULL
fuzzyFeature = list()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyClustering <- cmeans(t(tav), i)
fuzzyFeature <- c(fuzzyFeature, fuzzyClustering$U)
}
length(fuzzyFeature)
fuzzyClustering
fuzzyClustering$membership
fuzzyClustering$centers
fuzzyClustering
fuzzyClustering$cluster
d = NULL
fuzzyFeature = list()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyClustering <- cmeans(t(tav), i)
fuzzyFeature <- c(fuzzyFeature, fuzzyClustering$membership)
}
length(fuzzyFeature)
fuzzyFeature[0]
fuzzyFeature[1]
fuzzyFeature[2]
d = NULL
fuzzyFeature = c()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyClustering <- cmeans(t(tav), i)
fuzzyFeature <- c(fuzzyFeature, fuzzyClustering$membership)
}
class(fuzzyClustering$membership)
fuzzyFeature = list()
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
fuzzyClustering <- cmeans(t(tav), i)
fuzzyFeature[[i]] <- fuzzyClustering$membership
}
fuzzyFeature[0]
fuzzyFeature[1]
fuzzyFeature[2]
fuzzyFeature[3]
fuzzyFeature[4]
fuzzyFeature[5]
fuzzyFeature[6]
fuzzyFeature[42]
fuzzyFeature[43]
fuzzyFeature[1]
fuzzyFeature[2]
fuzzyFeature[3]
fuzzyFeature[4]
fuzzyFeature[5]
fuzzyFeature[6]
fuzzyFeature[7]
fuzzyFeature[8]
library(fclust)
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
result_index <- SIL.F(t(tav), fuzzyFeature[i], alpha = 1)
d = rbind(d, data.frame(i, result_index))
}
class(fuzzyFeature[2])
fuzzyFeature[[2]]
class(fuzzyFeature[[2]])
fuzzyFeature[[3]]
fuzzyFeature[[4]]
fuzzyFeature[[5]]
fuzzyFeature[[6]]
for( i in 2:floor( sqrt( nrow( t(tav) ) ) ) )
{
result_index <- SIL.F(t(tav), fuzzyFeature[[i]], alpha = 1)
d = rbind(d, data.frame(i, result_index))
}
write.csv(d, file = '/home/semantix/Documentos/mestrado/mestrado/silhueta/silhueta_teste.csv', row.names = FALSE)
png(filename = "/home/semantix/Documentos/mestrado/mestrado/silhueta/silhueta_teste.png" )
plot(d$i, d$result_index, type = "o")
dev.off()
which.min(d)
d
which.min(d[2])
which.min(d[result_index])
class(d)
class(d$result_index)
which.min(d$result_index)
d$result_index
cmeans(t(tav), 2)
